name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Test and Build Job
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🎮 Checkout Quest Code
      uses: actions/checkout@v4

    - name: ⚡ Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📦 Install Quest Dependencies
      run: npm ci

    - name: 🔍 Run ESLint (Code Quality Check)
      run: npm run lint

    - name: 🧪 Run Quest Tests
      run: npm run test

    - name: 🎯 Type Check with TypeScript
      run: npm run type-check

    - name: 🏗️ Build Production Quest
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

    - name: 📤 Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: quest-build
        path: dist/
        retention-days: 30

  # Security Audit Job
  security-audit:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🎮 Checkout Quest Code
      uses: actions/checkout@v4

    - name: ⚡ Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 🛡️ Run Security Audit
      run: npm audit --audit-level moderate

    - name: 🔐 Check for Vulnerabilities
      run: npm audit --audit-level high --production

  # Deploy to Staging (on develop branch)
  deploy-staging:
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    needs: [test-and-build, security-audit]
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - name: 🎮 Checkout Quest Code
      uses: actions/checkout@v4

    - name: ⚡ Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📦 Install Dependencies
      run: npm ci

    - name: 🏗️ Build for Staging
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}
        NODE_ENV: staging

    - name: 🚀 Deploy to Staging (Netlify)
      uses: netlify/actions/cli@master
      with:
        args: deploy --prod --dir=dist --message="🎯 Staging Quest Deploy - ${{ github.sha }}"
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_STAGING_SITE_ID }}

  # Deploy to Production (on main branch)
  deploy-production:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [test-and-build, security-audit]
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: 🎮 Checkout Quest Code
      uses: actions/checkout@v4

    - name: ⚡ Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: 📦 Install Dependencies
      run: npm ci

    - name: 🏗️ Build for Production
      run: npm run build
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
        NODE_ENV: production

    - name: 🚀 Deploy to Production (Netlify)
      uses: netlify/actions/cli@master
      with:
        args: deploy --prod --dir=dist --message="🏆 Production Quest Deploy - ${{ github.sha }}"
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

    - name: 🎉 Success Notification
      if: success()
      run: |
        echo "🎮 Quest Scheduler successfully deployed to production! 🚀"
        echo "🏆 Achievement Unlocked: Deployment Master!"

  # Dependabot Auto-merge (for minor updates)
  dependabot-auto-merge:
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    needs: [test-and-build, security-audit]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - name: 🤖 Auto-merge Dependabot PRs
      uses: ahmadnassri/action-dependabot-auto-merge@v2
      with:
        target: minor
        github-token: ${{ secrets.GITHUB_TOKEN }}